[package]
name = "polars-wasm"
version = "0.1.0"
authors = ["Bernd Kaiser <bernd.kaiser@inovex.de>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[package.metadata.wasm-pack.profile.dev]
wasm-opt = false

[package.metadata.wasm-pack.profile.profiling]
wasm-opt = false

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.84", features = ["serde-serialize"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

arrow = { version = "50", default-features = false, features = ["ipc", "ffi"] }
parquet = { version = "50", default-features = false, features = [
    "arrow",
    "base64",
] }
zstd = { version = "*", features = [
    "wasm",
    "thin",
], default-features = false, optional = true }
getrandom = { version = "*", features = ["js"] }
polars-arrow = "0.37.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde-wasm-bindgen = "0.6"
js-sys = "0.3"
chrono = "0.4"

[dependencies.polars]
version = "0.38"
# path = "/home/bernd/apps/polars/crates/polars"
default-features = false
features = [
    "abs",
    "regex",
    "diff",
    "dtype-full",
    "round_series",
    "lazy",
    "mode",
    "product",
    "rank",
    "reinterpret",    # "rolling_window",
    "rows",
    "temporal",
    "strings",
    "semi_anti_join",
    "unique_counts",
    # "performant",
    # "parquet",
    # "ipc",
    # "json",
    # "decompress",
    # "serde",
    # "serde-lazy",
    "csv",
]

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
codegen-units = 64
lto = true
